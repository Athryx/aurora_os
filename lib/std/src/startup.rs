use core::{slice, arch::asm};

extern "C" {
    fn main() -> !;
}

#[naked]
#[no_mangle]
pub extern "C" fn _aurora_startup() {
    unsafe {
        asm!(
            "pop rdi", // startup data pointer
            "pop rsi", // startup data size
            "call _rust_startup",
            options(noreturn)
        )
    }
}

#[no_mangle]
pub extern "C" fn _rust_startup(startup_data: *mut u8, startup_data_size: usize) -> ! {
    let startup_data = unsafe {
        slice::from_raw_parts(startup_data, startup_data_size)
    };

    unsafe {
        // main is function generated by rust compiler which calls the start lang item
        // it is used only to resolve actual rust main method, it does not perform any other startup actions
        main()
    }
}